name: NodeJS with Gulp

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Build
      working-directory: backstage
      run: |
        yarn install --frozen-lockfile
        yarn tsc
        yarn build:backend --config ../../app-config.yaml

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: '{"clientId":"${{ secrets.APPRGID }}","clientSecret":"${{ secrets.APPRGSECRET }}","subscriptionId":"f407a12a-7102-436f-acad-072d7dbafdd3","tenantId":"a5fd5ad6-e9c2-41d4-afd5-b466d95c9c7c"}'

    - name: 'Build and push image'
    
      uses: azure/docker-login@v1
      with:
        login-server: 'mattest.azurecr.io'
        username: ${{ secrets.APPRGID }}
        password: ${{ secrets.APPRGSECRET }}
    - run: |
        cd backstage 
        docker image build . -f packages/backend/Dockerfile --tag mattest.azurecr.io/backstage:${{ github.sha }}
        docker push mattest.azurecr.io/backstage:${{ github.sha }}

    - name: Azure CLI script
      uses: azure/CLI@v1
      with:
        azcliversion: 2.30.0
        inlineScript: |
          az containerapp up \
            --name 'backstage \
            --image 'mattest.azurecr.io/backstage:${{ github.sha }}' \
            --resource-group 'rg-backstage'
